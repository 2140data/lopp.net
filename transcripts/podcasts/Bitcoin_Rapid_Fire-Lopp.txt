
- Let's do it.
- There we go.
We're live.
Jameson, how are you?
- Not bad, keeping busy.
Even in the bear markets,
there's always something going on.
- Yeah, well, I mean, bear markets are usually
the time where all the building gets done, right?
Because people aren't celebrating
and on a high about the price
and just watching it tick up
and imagining how wealthy they're becoming every day.
So, you know, these are the times when I guess the base,
the foundation gets set for the next run up
and all the things everyone will be talking about
next time we garner that kind of attention.
- Absolutely.
- So just to set things up here,
maybe we can do two things.
One, for people that may not be aware of who you are,
you know, a little bit about yourself and your background.
And then you used,
recently I've been posting a Calendly link
and basically just saying,
if you wanna come on the show for a chat,
if you wanna discuss something, book yourself in,
let me know what you wanna talk about.
And, you know, if everything is kosher,
then we'll go for it.
And that's what you did.
And I suspect we'll talk about, you know,
maybe a little bit of a broader range of things today
than what you mentioned,
but what you wanna talk about and why it is you want it to,
you know, to do so.
- Yeah, and you know, I reached out because A,
I realized that we've never actually had a discussion
other than maybe a few seconds
when we crossed paths at a conference.
And, you know, my impression is that you have more
of a philosophical leaning on a lot of stuff,
which I would say most of the people who interview me
only stick to the really technical stuff.
So it's always good to have something different.
You know, I don't like repeating myself
every time I go on a podcast.
- I feel that 100%.
And you're right, definitely.
So some of the things we discussed today
will be way out of my wheelhouse,
but, you know, maybe you're the perfect one
to dumb it down for me and we can have a, you know,
a reasonably interesting discussion about it all.
So do you wanna go with a bit of background on yourself?
- Yeah, sure.
I mean, I've got about 10 years of experience in Bitcoin.
Spent the first couple of years
just sort of meandering around, you know,
trolling the Bitcoin talk forums, Reddit,
trying to understand what this thing was.
And after a couple of years,
I got interested enough that I wanted to dig deeper.
And so I actually forked Bitcoin Core in 2015,
created a project I called Statoshi.
And to be clear, this is not an altcoin.
You know, it retains all but about 500 lines
of the same code as Bitcoin Core.
It really, it only adds a few hundred lines of code,
which are for metrics and instrumentation purposes,
because what I wanted to do was I wanted to take
the open ethos of Bitcoin and bring more transparency
to what was happening inside
of the actual Bitcoin node itself.
So this was kind of leveraging a lot of the tools
and frameworks that I had been using
as a sort of DevOps software engineer
in my pre-Bitcoin work life.
And just helped to facilitate more discussion
and help both developers and really anyone
who was interested better understand
these internal operations.
And, you know, I would say that was a success.
Statoshi got referenced by a number
of different developers over the years
when they were talking about potential improvements
to Bitcoin and things like performance.
And after really only about a year of doing that
as my first project, I went full-time
and I spent the next three years working at BitGo
where I was basically working on infrastructure.
So BitGo was providing this multi-signature Bitcoin wallet
that was really, it was more enterprise focused,
you know, try to make it harder
for the hot wallets on exchanges to get hacked and drained.
And learned a lot more about nodes
and infrastructure during that time.
Then the scaling wars happened.
We had a lot of internal strife
even within people at the company.
It was a lot of fun drama that happened there.
And then in early 2018, I made a slight pivot
and basically decided that I wanted to take
a lot of what I had learned and apply it to personal use.
Rather than enterprise use of self-custody.
And so that's when I joined Casa.
That's what we've been doing now for five years.
Basically trying to make it easier for non-technical people
to securely self-custody their coins.
And it's a really complicated space.
I mean, security in general, especially cybersecurity
is constantly dynamic changing environment.
There's just a million ways that you can screw up.
And we wanted to make it so that non-technical people
can fairly easily get themselves into a position,
not only where they have a secure setup,
but where they can actually feel comfortable and confident
that they are able to create and maintain the setup itself.
I think that that has been one of the primary pieces
of friction that has held back self-custody in this space.
- Yeah, I agree with that.
I think all too often people select whatever setup
they end up selecting and then they kind of like
close their eyes and hope for the best
and hope that it's there for them when they need it.
Rather than becoming extremely comfortable with it
and familiar with it and testing and backing up
and restoring and all the different things you have to do
to basically have that level of peace of mind
over your setup and your degree of security, let's say.
Correct me if I'm wrong, the BitGo was kind of
on the other side of the SegWit issue, right?
- Yeah, yeah.
The CEO was a signatory on the New York Agreement,
which I believe that was the SegWit 2X
quote unquote compromise.
And it was funny too, 'cause this all happened
while I was in the same building
at the Consensus Conference.
And I didn't even know about it until after they published
the Coindesk article or whatever.
- Well, that's kind of what I wanted to ask.
To the extent that you can share, of course,
but what were some of the internal discussions
within BitGo at that time that, again,
seems like you were out of the maybe final decision,
but that you think may have led to support of that
versus UASF or?
- Yeah, so the New York Agreement was born
out of frustration from the large enterprise providers,
mainly the exchanges and then some of the companies like us
that supported the exchanges and their operations.
And there had been a lot of operational issues
because of congestion on the network,
backlogs of unconfirmed transactions.
I mean, I spent countless hours myself
both personally dealing with and doing outreach
to different companies and even mining pools
when I would find what I considered to be
very naive practices and sort of transaction construction
and UTXO management that would create these
really gnarly long chains of unconfirmed transactions.
So I had a really interesting front seat
to seeing why these companies were so frustrated.
And at the risk of sort of being generalization,
a decent portion of that was their own fault
because they were doing things naively.
Like they weren't putting in the work
to improve their own usage of the Bitcoin network.
And this was because they were viewing the Bitcoin network
as a resource that should just work.
They should just be able to like make an API call
and make it work.
Because this is how like business to business,
enterprise level internet companies operate
is you build functionality,
you're using development kits and APIs
of other enterprise grade parties
and you usually have service level agreements.
And generally like if you're paying good money
for what you're doing,
then you wanna be able to just hit it as hard as you can
and assume that you're gonna have like five nines,
99.999% reliability that whatever you're trying to do
is gonna go through.
Bitcoin doesn't give a shit.
You know, it's like you have to work
within the constraints of Bitcoin.
If you start to have problems,
the onus is on you to modify your behavior.
And so this was just, I think it was confounding
to a lot of these enterprise minded people.
And I understood this myself
and this could be a bit contentious,
but like I was before SegWit2x,
I was actually a proponent of Bitcoin XT.
And this was in late 2014, early 2015,
I think like right around
when I started to go full-time Bitcoin.
And Bitcoin XT was a proposal, I believe,
to increase the block size limit to eight megabytes.
The short version for why I was a fan of that
was because up until that point,
I had been working as a distributed
like cloud data analysis engineer,
by which I mean, I was responsible
for writing and maintaining jobs
that would run across 100 petabytes scale clusters of data.
And this was for an online marketing company
that was sending out a hundred million emails a day
and generating a ton of raw analytics
that my job was to create scalable applications
that could ingest all of that data
and make it easy for marketers
to like better target and segment pieces of their audience
to just improve the return
on their investment in our service.
And so from my perspective,
and from most of these corporate engineers
and business people's perspective,
and especially from Mike Hearn's perspective,
who was one of the main proponents of Bitcoin XT,
because he was a Google engineer,
he was doing similar type of stuff as me.
The perspective was one of capacity planning,
that you had to not only have sufficient capacity
to be able to meet the sort of ongoing regular demand
of your customers,
but you had to have massive excess capacity
in order to plan for the spikes.
So a real world example of what we had to do at my company,
it was called Bronto Software,
is that because we were primarily targeting
online retailing marketers,
we had several known times of the year,
like Black Friday, Cyber Monday,
various shopping holidays,
where we had to plan to have 300, 400,
500% excess capacity for those days
in comparison to a sort of normal day.
And so that was because we would get burned if we didn't,
and we would have these massive backlogs and timeouts
and database lockups,
and it would turn into this nightmare fuel
for the people like myself,
who were responsible for the ongoing operation of the system.
So long story short,
that all comes around when you start applying
that type of perspective and logic
to a system like Bitcoin,
which once again, it doesn't give a shit
what you're trying to do with it.
You cannot manipulate it,
you cannot ask for more capacity
in a straightforward fashion.
And so eventually that all bubbles up
and it turns into the multi-year scaling debate,
and then we get into these really interesting issues
of governance and how the actual protocol works
and can change.
People trying to apply flawed models like democracy
onto the system.
And so it was a fun time, it was a fascinating time.
And it meant that we had what really was a civil war.
We had brothers fighting each other.
I mean, we had like Charlie Lee and his brother
on complete opposite sides of this.
We had the CTO of my company
and the CEO of my company on complete opposite sides.
And this was not just closed room discussions.
This is like arguing publicly on Twitter
in front of the entire world.
And to the average outsider looking at like,
why are these two guys who are co-founders
of the same company having a public argument
at this level of strife?
So fascinating stuff that you don't really see happen
that often.
- Totally.
And so were you still at BitGo
once the New York agreement was effectively rebuked?
And if so, what was the response or the outcome to that?
- Yeah, well, it was the most,
I guess dying with a whimper type of end to the whole thing
'cause we spent a decent amount of engineering effort
actually writing tools to prepare for SegWit2x to happen.
'Cause there were all of these issues around replay attacks
and having to like be able to build,
paint into your UTXOs to make sure
that they wouldn't be valid on both forks.
And then it was like one and a half or two weeks
before the supposed fork activation date.
And our CEO comes in and he's like,
well, FYI, we're calling it off.
(laughs)
It was like, just seemed like out of nowhere
because it was this level of brinksmanship
where they seemed like they were not gonna take
any sort of constructive feedback
or be willing to be more patient.
And I think it really, it just came to a head of like,
it was generally a bluff.
And like most of the people around it
didn't fully comprehend all of the ramifications
and they believed that they could just sort of vote their way
into a new Bitcoin.
And I think eventually enough of them realized
the error of their ways.
And I think part of it may have also had to do with like,
there were some futures markets trading at the time.
And I think like the economic majority made it quite clear
that we did not want SegWit2x.
- Yeah, I remember that.
Were you vocal on either side,
either in the company or externally at the time?
- Oh yeah, yeah, yeah.
I was very anti SegWit2x.
And it was weird because I believe that as part
of the New York agreement,
we had committed to like helping aid with like the testing
and the deployment of the actual SegWit2x software,
which was just a fork of Bitcoin Core
with a very minimal change set of code applied to it.
And nobody could actually force us
to put a lot of effort into it.
And that's another reason it was kind of dead on arrival
is that despite all of this supposed public support
from all of these companies,
I didn't actually see a whole lot of engineering support
being applied to the SegWit2x project.
And you may recall it ended up failing to activate.
Like even if they hadn't called it off,
it would have blown up and failed to activate
because it was so buggy.
- Right.
I'm asking all these questions,
one, 'cause I'm interested,
but two, I think it'll be relevant
to some of the topics we discuss later on.
But why was it that you supported
what you ended up supporting?
And what do you think would have been,
I mean, total speculation, of course,
but what do you think would have been the consequences
had the New York agreement succeeded
and we'd gone with SegWit2x?
That might be a tough one to answer,
if you have any thoughts on it.
- Yeah, I mean, I wrote some lengthy blog posts
on why I felt like SegWit was a good path forward
and that soft forks in general were a better path forward.
And this, once again, it has to do
with just the way that the network operates,
that it's not a single entity
where you can request upgrades to happen
and some sort of service level agreement to be followed.
I had been watching node metrics
for many years at that point.
And one of the things I could see is,
how long does it normally take someone
to even update their node software?
And some people go years without updating.
It can be years.
I think last I checked, usually within one or two years,
I think most people update their software at least once.
But some people really do run it
as a sort of set it and forget it service.
And there is no, and this is by design,
there is no automatic software update mechanism.
There's not even really a notification mechanism.
There's no central authority who can send out a message
that says, "Hey, you should update."
There was at one time an alert mechanism
in the Bitcoin Core software, but that got removed
because it posed its own security vulnerabilities and risks.
- I mean, node software can effectively do that,
but you're talking about from the,
from Bitcoin Core, I'm assuming.
- Right, in order for the security model to be strongest,
you can't have really any sort of automatic update mechanism
because that means that there's something that's running
that could be compromised to pull down a malicious update.
- And so what about, I mean, 'cause you mentioned
how people within these bigger companies,
they were kind of used to things operating
in a different way, interacting with technology that,
what's the right way to put it,
was more responsive to their whims or their demands.
And now they're coming up against a form of technology
that's almost the reverse.
It's like, no, you conform to this
because this is a type of perhaps the most absolute
sort of technology that people have encountered
where it's not subject or susceptible to change
like other things you might've worked with are.
Do you think that's part of people's initial,
perhaps misunderstanding about what they're even dealing
with here in Bitcoin?
It's like, and this is perhaps even the process
of discovering what Bitcoin is.
I mean, I would consider all of these discussions
that are being had and these proposals for upgrades
as literally the process of defining what Bitcoin is.
And things get rejected and accepted based on like
how that negotiation happens.
And I say negotiation almost metaphorically
'cause it's not happening explicitly a lot of the times.
But I mean, what are your thoughts on that sort of framing
about how people have to think differently
about what this is and how to engage it
and how best to use it and or contribute to it?
- Yeah, so everybody comes in and approaches
this thing that we call Bitcoin with their own perspective
and they will try to build or apply
their own logical models to it.
And I think nobody gets it right the first time.
You apply a model to it and then eventually
your model gets shattered.
And this has happened definitely
from like the governance standpoint.
I see it happen, or at least when I was working at BitGo
and I was watching these new companies come on board,
I would see once again, these sort of naive mistakes
where very often a company would onboard with us,
they'd get their API keys set up
and they would immediately just start slamming us
with transactions at a rate higher
than the entire network could even account for.
And it was because they didn't know
what the fuck they were doing.
Like they didn't know about all of these constraints.
They figured it was like any other API
and you just start going for it.
So that model, it gets broken very quickly
whenever you try to do anything
that's like outside of the constraints of the system.
And then it just, the deeper and deeper
down the rabbit hole you go,
the more and more aspects of your mental model get broken.
And this is something I've spent a decade doing,
trying to understand, how should we think about Bitcoin?
And I almost think of it as less of a sort
of defining Bitcoin, and it's more of an exploratory process
of discovering how this thing actually works.
Because I mean, the code, the distribution of power
in many different ways, it's already there.
It's just very hard to quantify.
- Yeah, that's an interesting perspective.
You know, one of the things that I think about Bitcoin
is the idea of limitation, which is obvious, right?
Because there's, you know, 21 million hard cap
is a very overt explicit limitation.
And a lot of people would probably agree
that Bitcoin derives a lot of its utility.
It's very unique for that reason.
But, you know, in the realm of software, you know,
a lot of these limitations may not be absolute.
They might be absolute in a consensus manner,
but not in a, well, not in an absolute manner.
Like these things can be changed.
It's just a matter of, I think,
how much do we recognize the value
of certain self-imposed limitations?
Maybe we can put it like that.
You know, and that's its own rabbit hole in itself.
I mean, you can go down that rabbit hole
in philosophy and theology and all sorts of different areas.
Like what is the role of limitation
in permitting creation, you know,
in permitting things to flourish?
Like if there was no limitation anywhere,
then everything would just be goo, right?
So there's a definite value in limitation.
And I think part of the, well,
perhaps an aspect of wisdom is determining,
and this is on a personal level, a technological, a social,
what are the most generative limitations?
What are the most beneficial limitations
that when imposed actually allow for the greatest degree
of freedom and cooperation and harmony and wealth creation
and those sorts of things?
And I think, you know, that's, well, again,
we'll probably address it in some of the proposals
that we're gonna discuss here.
- Just before we do that, before we move into it,
and you can obviously respond to the comment
I just made if you like, but I'm curious,
what was your first, like,
what drew you into Bitcoin initially?
What's your rabbit hole story?
And you mentioned kind of how you started,
but not what really triggered your interest initially.
- Yeah, nothing particularly interesting, I guess.
You know, I'm a computer scientist as my background
and I spent a lot of time on nerdy sites.
I'm pretty sure Slashdot was where I ended up hearing
about it, not for the first time,
but it was probably the third or the fourth time.
And I realized it kept coming up because I,
like most people, dismissed it several times as a fad
that was gonna end in tears and everybody was gonna lose
their money and be crying.
And so, you know, after it kept coming up,
I realized, hey, why hasn't this thing been demolished?
Like, how is it still operating?
So I read the white paper and, you know,
it was straightforward enough that, you know,
with my computer science background,
I realized that this was solving a problem.
First of all, it was a problem I had never thought of,
but then once I looked at, you know,
the Byzantine generals problem,
and then I saw the solution to it,
it blew my mind because it was solving it
in what I would consider to be a completely
ass backwards way.
And by that, I mean, we as computer scientists
are trained in understanding data structures
and algorithms and how to architect them
in such a way to maximize the performance
and the efficiency, because this kind of goes back
to what you're talking about, you know,
there's limitations and constraints.
We are working within limitations and constraints
generally of the hardware that is running
whatever software we are writing.
And, you know, even me being a guy who is running
on these huge, you know, 100 petabyte data clusters,
you know, that was some pretty awesome hardware,
especially for over 10 years ago,
there were still constraints.
And, you know, one of the things that I struggled with,
for example, was to get some of these jobs
to run in less than 24 hours,
because I needed to make sure I was updating
all these metrics, at least on a daily basis.
And it's very easy to write naive algorithms
that perform very poorly.
It's very hard to continually optimize things,
especially when you're constantly fighting
against scaling problems and like nearly
unbounded data growth.
And your expectation is to continue to provide,
you know, the same response and performance,
despite having, you know, higher workload,
and in many cases, a not similar, like,
increase in the level of resources
that you have at your disposal.
So, you know, getting back to the white paper,
this was asked backwards because it was,
it was purposefully inefficient.
Like it's the least efficient database
that I've come across in my entire life.
And that holds true.
And I've said this countless times,
and especially, this is why I just laugh
whenever I see, you know, the enterprise blockchain folks
talking about how they've invented this great new database.
And I'm like, how much do you know about databases?
Like I've got, you know, work experience
with probably a dozen different types of databases
over the period of my career,
both relational and non-relationable.
And blockchain is the shittiest database ever,
if you're, you know, trying to use it
in some sort of enterprise scale thing.
You know, this is, it is, but it is purposefully inefficient.
And that's because unlike everything
that I had ever looked at or built in my entire life,
you know, Satoshi designed Bitcoin,
not for efficiency, but for robustness.
And so you have to flip everything on its head.
And so, you know, it still gives me tingles
just thinking about it, is that, you know,
this just was mind blowing that, you know,
you could even do this, that you could think in such a way.
And it opened up my mind to the possibilities
of what this really means,
because I had never even thought
in terms of centralization and decentralization.
I had always thought pure performance, you know,
minimize cost, maximize efficiency.
And now when I started to realize
that wasn't the only way of looking at designing systems,
you know, I started to understand
that this could empower individuals.
And so actually, you know, just a couple of years later,
when I decided to go full-time into Bitcoin,
I actually told myself at the time
that I needed a mission statement.
You know, I had spent my entire career up to that point
working on, I mean, you could call them
interesting technical scaling challenges,
but like I never had an interest
in what my company was actually doing and selling.
It was a paycheck, it paid well,
it gave me interesting challenges,
but it wasn't something that I found personally fulfilling.
And so I decided that from then on out,
my career was going to be based on using my skills
as a technologist, as a computer scientist
to build systems that helped empower individuals.
Because I felt like it was kind of fighting the tide.
This is true for a lot of things
in terms of like security and privacy and whatnot.
It was that the average person
tends to choose convenience
at the expense of everything else.
And so unless we focus on making the tools
that give you more power, more convenient,
then it's pretty much inevitable
that convenience is going to happen
in a centralized fashion
where you're giving up a lot of security and privacy.
- Yeah, a hundred percent.
I mean, that certainly seems to be
the way the internet has gone up to this point.
It's starting to seem like Bitcoin
in conjunction with other technologies
are starting to provide opportunities
that might help turn the tide.
Were you ideologically aligned, so to speak?
I mean, you just mentioned freedom,
so that was obviously,
or it sounds like that was an issue
that perhaps you were above average aware of
because you dropped the term freedom to a lot of people
and they're like, "What are you talking about?
"I'm free.
"Google doesn't own me.
"My money is safe in the bank."
That whole shtick.
So when you, it sounds like you were more,
well, it sounds like you appreciated the technology,
but I think necessary to fully appreciate it,
you would have to have kind of an ideological alignment
with the notion of freedom itself
and perhaps how much it had been,
well, how scarce it might be
in certain domains in society today.
And so was that also an element where you,
I don't know, libertarian, anarcho-capitalist,
these sorts of things.
- I've been everything, right?
So I was raised a good old Southern boy.
My family lineage goes back centuries
in North and South Carolina.
And Bible belts.
I was taken to church every year
or every week for 18 years until I left the home.
I got my full stereotypical indoctrination
into all things Southern
and definitely like, I guess, wasp,
wasp style lifestyle.
- What's wasp?
- White Anglo-Saxon Protestant, I believe.
- Oh, okay.
- And by the time I got into middle school,
I was starting to question a lot of that.
I started going a lot harder on the science
and trying to understand,
like a lot of this stuff seems like it's conflicting
with things that I've been told over the years.
And so, up until I was probably 19 or 20,
I was very conservative/right wing
because that's what my whole family had been.
That was the only thing that I had really known.
I ended up going to an incredibly liberal university
of North Carolina at Chapel Hill.
And that swung me to be very liberal minded.
I got, let's see, I voted for George W. Bush
when I was like 18 or 19.
That was my first ever election.
And then, 2001, 9/11 attacks, the wars,
all of that shit happened.
And I was like, why the fuck are we bombing
all of these people who I don't feel like they've harmed me?
Why don't you just target the really small group of people
who actually committed the attacks?
Why are we causing such devastation
and why do I have to pay for it with my tax dollars?
So, I got very disillusioned with the war machine.
And I know I ended up voting for Obama
the first time around.
I felt like, oh, this guy, he's like the antithesis.
These liberal folks, they might be onto something.
And then, of course, I watched him perpetuate the same shit
and I'm like, you lied.
- Damn it.
- So, yeah, so it was like, okay, fool me once,
fool me twice, what the fuck do I do now?
And so, I very naturally progressed into libertarianism.
And so, I certainly already considered myself
a libertarian at that point,
so I guess I was registered unaffiliated,
but I was definitely voting libertarian whenever possible.
But then, Bitcoin comes around,
I start spending a few years
going down the rabbit hole there.
And especially as I start to learn more
about the history of the cypherpunks,
I go just full-on anarcho-capitalist
and I stop voting completely.
I'm like, why am I even wasting my time
listening to these liars who I can't trust
and the only thing I can be sure of
is that they're gonna follow their own incentives,
not whatever my incentives are
that I hope that they're gonna represent me about.
So, I figure politics is a waste of my time,
it's far more effective for me
to use my very specialized skills
to create alternative systems
that are not as constrained
by all of the political and government infrastructure
that's out there.
- Right, now again, I mean, this is a rabbit hole of its own,
but just, do you, I mean,
this is a common discussion topic in this space for sure,
and I think a lot of people either were
or became disillusioned as you just described.
And I think a lot of people also,
once you start learning about Bitcoin,
you kind of realize, well, if this becomes global money
or even if it doesn't, to the extent,
it provides a type of solution whereby
it's far more difficult for the state
to siphon off your wealth effectively,
either surreptitiously via inflation
or directly via taxation.
I mean, you can, both of those things can be
far more easily avoided with a money like Bitcoin.
And so then the question becomes,
well, how does such an institution
continue to fund themselves
if more and more people operate in that way?
And the punchline is basically,
well, they won't be able to fund themselves
to the same extent,
and therefore they will atrophy to some degree
over the course of time,
and we'll end up having smaller and smaller
and smaller and smaller governance government
until the degree to which they are paid for their services
is commensurate with whatever services-
- The value they provide.
- Right, exactly.
And that we deem that the market can't,
in some sort of emergent manner,
construct in its, by itself.
And of course, I don't know,
who knows what that level is,
but is that kind of how you think about the evolution
of governance in an increasingly Bitcoin-denominated world?
Should we be moving in that direction?
- Yeah, I mean,
with something like the sovereign individual thesis,
I would say that we are trending in the right direction.
It would seem to me
that there are already sovereign individuals.
They are very few in number.
Most of them are actually known
as multinational corporations,
but there are certainly some billionaire-level
wealth individuals who are also essentially at that level
where you have negotiating power
essentially at the level of other sovereign countries
that are out there.
That's where most of the, I would say,
value and taxation negotiation happens right now
is various municipalities or states
essentially negotiating tax breaks
or other sort of incentives programs
because they know that the company
will bring real economic value
if it's physically located
within their so-called jurisdiction.
I think that's what we want to get,
continue to lower the bar of like,
what is the level of wealth and power
that is actually necessary to be able to negotiate
and kind of arbitrage the incentives
of different governments,
whether they be city, state, local, national,
to your own benefit so that you can find
the optimal living situation for yourself.
- Yeah, yeah, that's basically my perspective.
And I think more and more people
will be able to play that game when they have the money,
when they can move from jurisdiction to jurisdiction
with their wealth intact,
without any encumbrances or anything like that.
And hopefully, I think that process
will play out over many years,
but hopefully in the short enough term
for us to experience it will mean, as you say,
more and more jurisdictions saying,
"Hey, we want that capital.
We want your intellectual and financial capital here
in improving our area and expanding our tax base
to the extent that you're willing
to concede whatever amount.
And so let's try to make our rules,
for lack of a better term, more attractive to you."
And I think there's initial inklings of that already
in certain jurisdictions,
albeit small and not as easy perhaps to opt in,
but I think that will change.
All right, well, maybe,
I think we'll probably revisit
some of the things we've already discussed,
but it'd be great,
the original reason you reached out
was you wanted to discuss a few soft fork proposals
that have been bandied around over the last little while,
and kind of pro and con them
and just shed some light on them perhaps generally.
So I don't know where you wanna start with that,
but over to you.
- Yeah, so I mean,
one thing that I've been thinking about more recently,
because over the past couple of years,
there's been more discussion about it,
but there is this concept in Bitcoin
of something called covenants.
And you have to get at least a little bit technical
to understand what is a covenant.
Hopefully people at least understand
that there's no such thing as a Bitcoin,
within the context of the protocol and the database,
the only data structure that really exists
are transactions and blocks,
the transactions get bundled up into blocks.
And then these transactions have inputs and outputs,
and the inputs and outputs
are all just go to other transactions.
So when you want to spend Bitcoin value,
you have to find transaction outputs
that have not been spent before,
and use them as inputs to a new transaction.
Now, when you wanna do that,
you have to follow whatever the rules
and the constraints are that have been placed
on those unspent transaction outputs.
So the vast majority of the time,
what people are doing is they're using
what we call just a single signature construction.
It's basically, you're creating the script that says,
in order to be able to spend the funds
that are secured by me,
I need proof via one cryptographic signature,
and that signature has to match the public key
that we are putting in this script.
Very straightforward, dead simple, very easy to use.
What I've been doing for the past eight years
is slightly more complicated.
I've been helping build multi-signature Bitcoin wallets.
And so these use a slightly different script,
but it's the same type of construction.
Basically, you're saying,
all right, in order to spend the funds
from this particular address,
you need to provide, say, two signatures,
and they must correspond
to any two of these three public keys.
So, you know, still easy to think about.
But all you're really doing is you're able to define,
you know, what is the locking and unlocking mechanism
on any Bitcoin that are being deposited
to an address that you generate.
So this is essentially an operation
that is only good one time,
and it's only good for, you know,
when you want to spend from a Bitcoin address.
What we're missing though,
is an ability to place restrictions
on where the Bitcoin goes after it's spent.
That's something that we just,
we simply don't have the ability to do right now.
And that is what a Bitcoin covenant really means
at a very high level.
It means it's just a mechanism to enforce conditions
on future Bitcoin transactions.
So this is a very high level generic thing.
There have been almost a decade's worth
of different covenant proposals out there.
And they actually started off almost jokingly,
and then they've become more serious.
And over the past few years,
the sort of volume of new proposals
that has been coming out has been increasing.
And we even had a new one come out
just a few weeks ago called OpVault.
But it's a really complicated space to think about
because these proposals are all over the place.
They have all types of different attributes
and complexities and trade-offs.
Some of them are really generalized
and can almost get to the point of being,
you know, quote unquote, Turing complete.
Others are really restrictive
and they only offer a very small set of functionality.
You know, some of them are like a one-time
future restriction, but others can actually be recursive,
which basically means that you can continue
to apply that restriction really
for an arbitrary period of time
going forward in the future.
And then just the implementations,
some of them are these soft forks
that are based on like new codes
and the scripting language that would have to be added.
Others are using slightly more hacky
signature-based mechanisms.
There are even, there are ways to do covenants right now
without any changes at all to Bitcoin.
However, they involve whole sets of complexities
and trade-offs in and of themselves
where basically you end up having to pre-sign
this huge set of transactions
that's basically defining all of the different logical paths
that the Bitcoin could be spent to.
You know, you can kind of think of it
as like you're drawing a map and saying, you know,
you could go to this address, but if this happens,
you could go to that address.
And while, you know, it technically enables
some interesting security models and functionality,
it's just, it's kind of a non-starter
because you end up having to create
and sign all of these transactions.
You have to do, you have to redo the whole process
every time you get a new Bitcoin deposit.
And also it's very brittle
because you have to decide ahead of time
a lot of different attributes,
like the fees that the transactions are paying
and the addresses that they're going to.
And so, you know, if you think about setting up
this really complicated logical flow of value
for your Bitcoin and you want it to be a long-term thing,
like maybe you want the Bitcoin to sit there for five years
and not have to go through that flow for a really long time.
Well, five years from now,
let's say you pull all of that logic
and all of these transactions
that hopefully you haven't lost in the meantime,
and you pull them out and you start going through it,
you have to hope that you still have access
to all of the private keys for those other addresses.
You have to hope that the transaction fee rates
on the network aren't so high
that you can't even get them confirmed.
You know, it's just a really gnarly mess of complexities.
And that's why we've had a decade
of different proposals come out
and people basically saying,
"Well, you know, this is problematic because of X, Y, and Z."
And so, you know, it all kind of comes to a head,
I think, especially with the most recent proposal,
which I kind of see as a,
it's taking a different perspective on this whole thing.
And basically this is the OpVault proposal.
But I think OpVault is very interesting
because of how simple it is.
It's very easy to reason about.
It's also just a lot more flexible.
It doesn't require you to create pre-signed transactions.
And like I said, it's very specific
in that it's not a generalized covenant proposal.
It's just giving vaulting functionality.
And to get technical, like what is a Bitcoin vault?
The general definition of a Bitcoin vault
is that you're using,
it's a specific type of covenant transaction
that enforces a time lock
on the transfer of the control of funds.
But it also enables this immediate transfer of funds
into recovery wallets if something goes wrong.
So diagrams tend to be really helpful with all of this,
but basically the idea is you put your money in the vault
and then you can at any time try to initiate a withdrawal.
But that initiation, it's a Bitcoin transaction.
It goes out to the whole network.
So anyone who's listening to the network knows about it,
but the funds then have to sit there
for some period of time that you've determined
before they can then be withdrawn to an arbitrary address.
So it's basically giving you time
to be able to react to a potential compromise
to your wallet.
And this is really the,
I think the missing side of Bitcoin security
is that right now,
we don't have a way to react to a compromise.
Like if your wallet's compromised,
I'm sorry, but your money is gone.
And your only real option is to hope
to like talk to chain analysis companies
and hope that the attacker sends it to a KYC exchange
where they can get caught by law enforcement.
But the result of that is that people like myself
and all of these other security companies in the space,
we've spent the past decade building higher and higher walls
so to speak, more and more proactive security
to prevent the attacker from getting over the wall
in the first place.
Because we know that once they get over the wall,
it's game over.
And I think that this almost comes full circle
to talking about what we said very early on,
people come into this space
and they have certain expectations
based upon other systems that they're familiar with.
And one of the really common objections
that I think you see newcomers in the space make is,
well, if someone takes my money,
if there's an unauthorized use of my Bitcoin,
I can't go to anybody to get a charge back, right?
And it's not like credit cards are so much better
'cause if something goes wrong, you have protection.
And enabling a simple chargeback mechanism
in the Bitcoin protocol that involved
some sort of third party authority,
that's obviously never gonna happen.
That just like violates one of the most
fundamental aspects of Bitcoin.
Like we cannot have a way for people
to be making arbitrary decisions about
who is and is not a scammer or a thief or whatever.
That just devolves into political bullshit.
So I see a vaulting proposal as a way to enable chargebacks,
but it's defined by the user.
It doesn't require on any trusted third parties.
It doesn't compromise any of the principles of the protocol
because this is something that's fully self-contained
within the own user's sovereignty.
- A lot there to comment on,
but just a question on the vaults themselves.
So it sounds like this is primarily
the implications are around security,
this particular proposal.
To what extent do you think even were this proposal
implemented, if it was an option,
the nefarious characters would find ways
to climb that wall as well?
Like knowing how it works and knowing,
yeah, I mean, would it not be the case that
perhaps it would just be a temporary solution
and the means would be discovered
or the techniques be deployed to
account for that additional step?
I mean, would that be a possibility
or am I seeing it from the top?
- So, it's not a silver bullet.
There is no such thing as a silver bullet in security
and that's because there's this fundamental property
that anything that can be owned,
anything that can be secured can be compromised,
can be stolen.
So, like I said, I think what this is giving us,
it's if implemented correctly,
because that's always a big caveat,
it's always possible to do things
in a very stupid, naive way,
but if implemented correctly,
this is additive to your security model,
by which I mean, when we're constructing
super high security Bitcoin wallet architectures,
to give an example of like what we do with CASA,
with MultiSig, it's not just merely the fact
that there are multiple keys.
There are a million ways to create
a really stupid MultiSig setup.
We've seen people who are technically using MultiSig,
but like all of their keys are in their house.
You've created a single point of failure there.
So, if you want additive security,
what you need is you need to have
different types of security,
as many different types of security
as you're comfortable with,
and you need to kind of think of these as layers.
This is a sort of defense in depth strategy.
This applies to really any type of security mechanism
for anything physical or security or digital.
If you think about like how high security physical places
are set up, whether it's a bank vault or a prison,
or even your own personal home security,
you don't just have one line of defense.
You don't like only have a door with a lock on it.
You preferably want to have multiple different layers,
different perimeters.
You want a fence out there.
So, first someone has to get past the fence,
and then maybe they have to get past a dog,
and they have to get past other like electronic surveillance
and alerting systems.
And that's because you understand
that any one of these things can be compromised,
but the likelihood that many of them
are compromised in a short timeframe,
especially without you noticing,
it just becomes less and less likely.
And also there's the concept of positioning yourself
as a hardened target.
If your security is obviously an order of magnitude
greater than your neighbors,
then a criminal who is looking for an opportunity
is just gonna walk by and go to the weaker target
where the return on their investment calculation
is gonna say, "I'm much more likely to get away with this
and be pleased with the result."
So, yes, even with a reactivity
added to your security model,
it's still technically possible for things to go wrong.
It's actually, I think, appropriate.
You can actually look at the way Lightning Network works,
because this is a very similar type of game theory
that you're setting up.
It's not exactly the same,
but the idea with Lightning Network,
it needed to have reactive security to work at all.
And the reason for that is because Lightning
is a protocol where you are online all the time
and you're constantly in this dynamic environment
where things are updating
and you're exchanging transaction data
with other peers that you don't trust.
And so it's always possible
that one of your counterparties could try to screw you
by publishing a stale transaction state
that would essentially give their money back to them,
take it away from you.
And so in order to have a higher level of confidence
that that won't happen,
because you can't prevent it from happening
because it's a fundamentally required aspect of the network
to be trading these messages back and forth,
you have to create a set of game theory
that penalizes the person
to prevent them from even trying in the first place.
And so that's why you end up running watchtowers,
you end up listening on the network for these transactions,
and you've created,
as a part of that message passing back and forth,
updating your HTLC as your hash time lock contracts,
you have, you're holding in reserve
these penalty transactions.
So your counterparty knows if they try to screw you,
you're actually gonna screw them even harder,
and it's a completely automated game
that nobody wants to play that game.
Now, theoretically,
there's still some things that can go wrong there.
If your lightning node goes offline,
and it stays offline for a week or several weeks,
then you're no longer actively scanning for that,
you could theoretically be subject to loss there.
Now, off the top of my head,
even when that happens,
we don't see a lot of theft happening.
And that's because your counterparty,
even if they know that you're not online,
they don't know whether or not
there are any third party watchtowers
that are just passively listening out there
that are still holding that penalty transaction in reserve,
just waiting for you to try.
So with a on-chain vault functionality,
it's the same type of thing,
except instead of the attacker
losing money that they've committed,
they just immediately lose access
to whatever they have stolen from you
or started to try to steal from you.
So if you're not running your watchtowers,
if you're not paying attention,
whatever that timeframe is,
then yes, it's still possible
the attacker could get through the first step,
the funds sit there,
and then that time lock expires and they continue on.
So you do still have to have diligence,
but this is not,
and it should not be the only line of defense
in your setup.
You should still have really good proactive security,
but this reactivity is just additive.
It gives you a whole new layer of security
that an attacker has to deal with.
- Right.
I think, we mentioned the comment earlier
about this ongoing process of defining Bitcoin, right?
And I think it's fair enough to say
that a developer that would put forward a proposal
like this is saying,
"I think Bitcoin should be what it is now plus this."
And that's my definition of Bitcoin,
or at least that's what I'm proposing.
What do you think about it?
And I think that's probably,
has for a long time been the tension
and probably for a long time will be.
It's like, well, what do people think Bitcoin is?
And what do people want Bitcoin to be?
Do you want it to be as simple as possible
and to have everything else be not on the protocol level?
Like what you guys are doing at Casa
in terms of security and whatever else.
And how much do you want to integrate
into the protocol level?
And how do you even make those decisions?
How do you decide if a given proposal
is quote unquote worthwhile to implement?
And what are the trade-offs in doing so?
And saying like, "Well, cool, it's a neat idea.
Probably has some applications."
What are the trade-offs?
And not just the trade-off in making that,
in implementing that proposal, let's say.
Let's say it's a popular one and it goes through.
But what are the trade-offs in normalizing change itself?
In having change be something
that is increasing frequency, let's say.
And so maybe, and obviously this is kind of
part of the ossification sort of argument,
but what are your, yeah, what are your impressions?
What is Bitcoin to you?
What do you think its potential is to be?
And how much of, what is your philosophy
in terms of how simple or complex things
should be on the protocol level versus services
and things on top of the protocol
or outside of the protocol?
- Yeah, I mean, it's really complicated
because I think that there are quite a few
different principles that if you want a proposal
to be generally accepted,
or if you want it to be non-controversial,
then you can't be breaking any of the inviolable principles
of Bitcoin.
And so, like one of those is censorship resistance.
Everybody, I think, knows about the sort of
money supply limit.
I think in general, breaking changes and hard forks
are too controversial to get through,
unless of course there's some sort of other
imminent looming threat, which may happen someday.
But I think with covenants,
one of the reasons that they have been more controversial
and there hasn't been a proposal
that has been widely accepted
is because a lot of them are generic enough
that they're just more difficult to reason about.
And when the developers find them difficult to reason about,
they worry that there are hidden edge cases in there,
hidden vulnerabilities that if it got deployed
on the main network, could cause catastrophe.
Now, I think one of the more tangible pushbacks to covenants,
especially recursive covenants
that can sort of self-propagate themselves,
is that if you're not careful,
it certainly is possible to create a situation
that could affect the fungibility of Bitcoin.
So that's another inviolable property, I would say,
is that we don't want there to be
sort of different classes of Bitcoin.
Though this can get into a kind of gnarly gray area as well,
is like, what does fungibility actually mean?
But I think that a sort of a worst case scenario
would be, of course, some sort of covenant
that was added by some sort of third party authorities,
whether it's like regulated exchanges or something,
or basically something where there's authoritarian entity
that is adding in these like malicious recursive covenants
that would basically allow them to arbitrarily affect
the fungibility of Bitcoin.
So there's definitely some potential problems.
- You might say like, chain analysis companies these days
are perhaps trying to do that.
Now, the extent to which they can be successful in that,
especially over the course of several transactions,
maybe their influence on fungibility
over the course of time is not absolute,
it's not forever, for example.
But is that what you mean?
Because of course, there's examples of exchanges
rejecting certain UTXOs because they may be flagged
by a chain analysis company of having been involved
in a coin mix or some nefarious activity.
And you're suggesting that were this done
on a protocol level with something like a covenant,
that would be, that taint would be held in perpetuity
more absolutely?
- This is where it gets really difficult
to talk about covenants because there's so many
different ways of doing it.
But suffice to say, like, there would be ways
to implement covenants that would enable third parties
to add in restrictions that you don't even know about
until they decide to reveal them.
And so that's certainly a dangerous area
that we want to avoid.
I think that would be too controversial
to get into the protocol.
But talking about fungibility,
there are covenant constructions
that would vastly improve fungibility.
Some of them would enable batched lightning channels,
that's both scalability and I think fungibility improvement.
Some of them would enable functionality called coin pools,
which would be kind of like a supercharged coin mixer.
And then like there's other sort of L2-esque things
like space chains and state chains,
they're lightning-esque that could also be enabled
and would improve the privacy of people that are using them.
But yeah, it's a complex sphere.
It's like, I think it's unlikely that we're going to see
a generalized covenant proposal
that is sort of a kitchen sink proposal get through
just because of all of the complexities.
- Maybe it'd be useful to illustrate two extremes
of the spectrum and get your take on where you might fall.
And so on the one extreme, let's say,
and perhaps these developers
that are putting out these proposals,
and as I said, kind of in doing so,
proposing how Bitcoin might be defined,
how you, what Bitcoin should be,
they're saying, Bitcoin should be this plus, this plus,
but there's obviously a lot of people out there
that say Bitcoin is fine the way it is.
And in your haste to implement new protocol features
that ostensibly would accelerate adoption
and make the user experience better,
one, you're taking on too much risk
and two, perhaps you're just being impatient.
Perhaps what it is today is absolutely sufficient
for it to become dominant global money,
but it's only been 13 years or whatever.
And so these things take time and be more patient.
So that's the ossification end of the spectrum.
And then over here, it's just,
this is programmable money
and we should be programming it because of that.
And everything backwards compatible,
but if we think there's a legitimate implementation
to be made, why not?
Why not do it?
Not to, we can make this thing so much better.
Those are two ends of the spectrum.
Where would you say you fall on that spectrum
and what is your thinking or justification
behind being in whatever place you are?
- Yeah, I mean, I think that most of the developers
in the space would generally agree
that ossification is inevitable.
I mean, we have decades of experience
with internet protocols that shows this to be true.
It's almost like a physics problem, right?
It's like once a protocol gets sufficient adoption
and momentum, the ability to change it
at least in a non-backwards compatible way diminishes.
And so that's why things like SMTP,
the email protocol haven't changed in many decades
because believe me, working at an email provider
for a decade, there are plenty of things
that could be improved with the email protocol,
but it's just not feasible to try to make those changes
at the protocol level.
Now, I gave a keynote presentation last year
and wrote a lengthy article actually of my own perspective
on the history of email as a protocol.
And I would argue that in terms of the total design space
of a protocol and what it can do,
if you're trying to maintain a protocol
to be as decentralized as possible,
I think one question you have to ask is
if we don't change the protocol,
are people going to choose convenience and centralization
in order to get these things
because they're not happening at the decentralized level?
I think that's one risk that a lot of people
can easily overlook.
As a technologist, I'm certainly against the idea
of purposefully ossifying the Bitcoin protocol at this point
because there are still quite a few improvement proposals
out there that I think would be value adds
and can be done and implemented in such a way
that they don't cause harm to other users
who don't care about those features.
I think that you do need to take
the sort of do no harm approach.
And I think that's generally the case
if you consider that the way that the quote unquote
governance and consensus of the Bitcoin network,
it's rough consensus and running code.
And rough consensus, I mean, it's not democracy.
It just means that for any given change that is,
consensus change that affects really anyone
who wants to validate all of the rules of the network,
there should not really be any unresolved
or reasonable objections to making that change.
And so I think reasonable objections usually mean
that someone has found some sort of harm
that that change could cause.
- I think about sometime in the future when instead of,
I mean, I don't know how many so-called real Bitcoiners
there are in the world today.
And I've seen statistics like 150 million people
hold some Bitcoin, but I imagine that includes
like your $10 on Coinbase and that sort of demographic.
The people for whom this is,
they see the revolutionary potential of this
and they're basically all in, if not all in financially,
but kind of all in ideologically perhaps,
is probably a way smaller number.
Now, in the case of making upgrades,
that's probably beneficial.
You have like more eyes on what's going on
and people are very vested into this.
But if we imagine a future where Bitcoin is again,
kind of becoming global money.
And so there's a billion people just take for granted
that Bitcoin is what it is in terms of money that they need
and it works.
- How do you see the upgrade process unfolding
when there's so many more people using
and relying on Bitcoin, but that rough consensus process,
I mean, what does that even look like
when Bitcoin has a billion daily users or even more?
Like how do you see the evolution
of the upgrade process going as we grow,
I guess is the question.
- Well, yeah, I mean, in the sense that,
it is an open source collaborative project.
Like this was one of the things that initially drew me
to Bitcoin as well that I didn't mention is that,
I had never thought about the operation of money before.
I never really thought much about econ.
I took econ 101, but that was about it.
And once I started thinking about money
as this abstract concepts, I truly believe that,
money is just this agreement between people
that something has value and you use it,
exchange and store value, you have to agree upon it.
There's a million different reasons
why you may agree upon one thing or another,
but assuming it's not a monetary system
that's imposed upon you, sort of free market money
is something that has attributes that are useful
and therefore valuable as money.
So it makes sense if you want,
I hate to use the word fair,
but if you want a monetary system that is not corrupt
and easily manipulated,
then it needs to be an open source project
because what that fundamentally means
is that anyone who cares enough
can contribute.
And so, I think that there will be a natural evolution
as Bitcoin goes mainstream,
you already basically alluded to,
the vast majority of people aren't going to care enough
to actually contribute to the evolution of Bitcoin.
But the great thing about open systems is like,
no one has to ask permission to contribute.
This is not a system that is manipulated behind closed doors
by a small cabal of people who issue their proclamations
about what lovers they're gonna pull this week.
If you care enough,
and probably the people who care enough
will mostly be the early adopters
who are more incentivized to care enough,
then you will contribute.
But what does contribute even mean?
There is the sort of organic mesh network
of all of these different communications platforms
where the Bitcoiners are coming together
to talk about and discuss, create memes.
I mean, it's all related.
Is that anyone who cares enough,
they will contribute in their own way
and it doesn't have to be technical by any means.
- Yeah, I guess one of the things I meant by that question
is already there's a lot of deference
to the so-called experts, right?
Because not everyone is capable of understanding
every little nuance about how Bitcoin currently functions
on a protocol level, nor the technical details
and consequences or implications of proposals.
And so there's a lot of deferring to the experts
and that becomes an increasingly small group.
And then like this so-called rough consensus
ends up just being a lot of people deferring
to people that they think know better than them.
And things kind of happen in that way.
And I guess the crux of the former question,
the prior question was, I don't know,
does that become a risk at scale
where so many people are just deferring to others
for knowing what to do
and that kind of developing a potentially deleterious
or causing a deleterious situation
where not enough people are sufficiently aware
of the implications and potential risks of certain changes.
And therefore, things degrade or more risks emerge.
And perhaps, this is almost certainly part of the reason why
and I'm not saying exclusively,
but a lot of those people might as a result of that
defer to simplicity, just because they say,
look, I don't see the full picture.
I don't know all the details,
but this thing is so damn important
that I'm just like, keep it simple, stupid, right?
Like just let's not shake the boat
and let's keep it minimal.
I'm happy with how Bitcoin is currently defined
or how I'm currently defining Bitcoin.
And so why invite the risk?
Yeah, so what do you make of that kind of that circumstance
where there's so much deference to people
that are by people that don't know all the details
to people that presumably do?
- It's to say nothing of the value judgment question.
It's more a matter of the specifics, the specific details.
- That's not a unique phenomenon by any means.
I believe that you could point to any mainstream
open source project and show
that the same thing has happened.
Now, there are dangers in that.
And I think even at a broader level,
this kind of gets back to the relationship
between enterprises and the open source projects.
Like there's an untold level of wealth
and large swaths of our capitalistic society
that is built on the foundation
of free and open source software.
And there is definitely a problem
with the wealth not quote unquote trickling down.
Or in this case, it would be the resources
not being contributed back to the foundation.
And this has resulted in some scary incidents.
There's kind of an inside joke amongst a lots
of the cybersecurity community that some of the most valuable
and like important security projects out there
are maintained by one dude in his garage.
And so examples of this are like,
I think there have been several like SSL vulnerabilities
over the past few years that have been found
and only after they've been in the wild for quite a while.
And you can make a strong argument
that the reason that these vulnerabilities
weren't found and patched a lot faster
is just due to the absurdly low level of resources
that are being contributed to these projects.
They're not receiving resources commensurate
with the level of importance
that they are giving to the entire world.
That's a related but whole other problem.
I would say right now that is not a problem in Bitcoin.
There are a decent number of organizations out there
that have provided funding and stuff.
I would say that the bigger problem,
and this might be changing because of the bear market,
but the bigger problem is generally getting engineers
into contributing to Bitcoin and keeping them there
because burnout is certainly a problem.
I mean, this is ostensibly one of the most adversarial
open source projects to contribute to.
And especially if you are a known identity,
you're not contributing under a pseudonym,
you expose yourself to a decent amount of attack,
whether it's digital or even physical
due to people making assumptions
about your own personal wealth.
So there's a lot of both common and uncommon aspects
to the issue of protocol development in this space.
We definitely, I would certainly like to see
more outreach programs.
We do have things like Summer of Code,
I think a few other programs out there
that are kind of like reaching out to university students.
Like we need more fresh blood.
I also wanna see more diversity.
That's gonna trigger a lot of people,
but Bitcoin is supposed to be the money of the world.
We don't want it to be like solely developed
by the high tech United States
and European wealthy countries.
I think it is cool.
And I think we've seen more African developers
jumping in recently, that's great to see.
Basically what I mean is like,
I wanna see people from all cultures, languages, backgrounds
because they will bring their own perspectives with them
and they will be able to contribute
and diversity, I see diversity from a security standpoint
as a great strengthening factor.
Because like one of the reasons that open source works
is because you have many different sets of eyes
with different perspectives that are like looking at the code
and trying to find weaknesses.
So more diversity in terms of the eyeballs
that are contributing to Bitcoin
is only gonna make it stronger.
And once again, with the trigger word, I think fairer,
because we're going to just have more people's perspective
and a better understanding of what is this
quote unquote ideal money from a global perspective.
- Right, what's wrong with fairness?
Fairness is a good word, isn't it?
The protocol is fair, it treats everybody the same.
I think maybe the, I mean, in today's cultural landscape,
I probably agree that it's been bastardized
and has been misused and misplaced.
But as an ethic almost, I'm fully on board.
Let people sink or swim on their merit.
- I feel better saying neutral,
credibly neutral rather than fair,
because fair, like you said, it has been bastardized
to mean things about like equity and outcomes.
- Yeah, I see your point about diversity
of perspective basically,
because you want as many perspectives
to brought to bear on something so important as possible
so that people can see the pitfalls,
different people's ideas.
Again, I think that that term has been bastardized
in today's culture and the way in which it's been applied
or the way the manner in which it's been attempted
to be imposed, let's say, has just been completely insane.
I think the way that you cultivate the benefits
of diversity is you just, you allow anyone, like you said,
I mean, an open source project,
you allow anyone who wants to contribute
to be able to contribute on equal terms with anybody else,
not, and based on their merit, right?
Not that you treat everybody the same,
but you say like, the door is open.
And now once you walk through the door,
then you prove yourself in whatever way you can.
And I agree like Abu Bakr from Kala
and Bernard from Bitnob are saying,
Bernard from Bitnob are our friends.
And like, I just, I love what they're doing over there.
And Abu Bakr has, and Kala is basically funding
and training developers.
And he himself just kind of came into the space,
was like, wow, this is cool,
and taught himself how to be a protocol developer.
And I think I love to see that.
When you were speaking,
one of the things that came to mind is,
I wonder had, because the,
I'll kind of preface this by saying,
is it a risk that corporate interests
are sponsoring protocol developers?
Now on the face of it, you say, no, this is great.
You know, these protocol developers
are being compensated for the work
and that's been a long time coming,
but had that been the case,
let's say in the New York agreement,
would that have changed things?
Would so much corporate influence
and those corporates saying, look,
we really want this vault thing.
This is a change we want.
And now developers have more of a financial tether
and a financial consideration,
a conflict of interest, you might say,
with the people that support them.
Now I know on the surface,
all of that is attempted to be hand waved away.
No, you don't have to do anything, you know, regarding us,
but in the real world,
if someone is paying you
and you do something that they don't like,
there's at least a chance that they stop paying you,
if not now, sometime in the future.
So do you think the corporate versus,
let's say the crowdsource funding of developers,
which I would say is in a different category,
you know, people just tipping or sending sats or whatever,
is any degree of threat now or in the future?
- I don't really see corporate funding as a threat.
I mean, I do think it is important
that if you're a corporate funded open source developer,
that you need to have a contract clause
that basically says that, you know,
there's no strings around
how the corporation directs your work.
You know, even if there's not, there's backstops.
I mean, this is part of the security model
of really both the Bitcoin core code base,
you know, any other Bitcoin code bases is, you know,
as we said very early on,
there's no automatic update mechanism.
There's a multi-layer, you know,
ring defense system in place.
You know, the first is, you know,
sure, you can pay a developer to write up a bad
or malicious code and they can even propose it.
Then the first ring of defense is that, you know,
the maintainers of the repository look at it
and then they just reject it and say,
no, this is ridiculous.
Now, you know, you could then say, okay,
well, what if all or many of the maintainers
of the repository are compromised and the code gets in?
Well, that's where the, you know,
there's no automatic update mechanism comes into play.
And the fact that many other people like myself
will be watching.
And even though we don't have, you know,
any say over the actual code in the repository,
we can, you know, sound the alarm and say,
hey, everybody, we need to migrate, you know,
to a new code repository
because this organization has been compromised.
We can't really trust what they're doing anymore.
You know, that I think that would be a huge blow
to the project in general, you know,
almost analogous to having to like
nuke the mining algorithm
if there was some like state sponsored 51%
denial of service attack against the network.
But, you know, basically the point is, you know,
this is why Bitcoin is anti-fragile
is because the points of control as they were
are so spread out.
The end points are the individual users.
Well, the ones who care enough to run their own node
and, you know, to validate the rules of the network.
- What do you think are the risks of upgrades?
And let's say they get rough consensus
and they're implemented, like I alluded,
I mentioned before that in my view,
and I don't know how to quantify this risk,
but if we're dealing with something who,
much of whose value is derived from its absoluteness
in Bitcoin, let's say, you know,
one of those things being 21 million hard cap,
then even the frequency and the normalization
of change itself could potentially be a risk to that.
Because on the one hand, you're saying
it gets a lot of its value from being an absolute
and perhaps the most consequential absolute
that, you know, we have available to us.
But on the flip side, if changes become not something
that are done, you know, with extreme caution
and less and less into the future,
but more and more into the future,
how much does that increase the risk
that at some point in the future,
one of those changes might be affecting that thing
that we previously held to be absolute.
And so both from that perspective,
but also from the perspective of the technical changes
and the risks associated with them themselves
for any given upgrade, in your mind, what are they?
And how should we be thinking about them?
- Yeah, I mean, I don't think you're gonna find
many people say that like we should accelerate changes
or like we should no longer have, you know,
extremely conservative peer review process.
I think that's all important.
We need to approach this really from a, you know,
a mission critical engineering perspective.
You know, it needs to be aerospace engineering,
not, you know, web app engineering level of thoroughness.
And, you know, it's fine if things take a year
or multiple years to be sufficiently vetted,
but, you know, this kind of also goes back
to the whole point that we've said about,
like we're still, you know, understanding what Bitcoin is
and ossification in general is that
you can never be a hundred percent sure
that Bitcoin is what we think it is.
And I think a good example of that would be BIP 42.
And BIP 42 was when Peter Wille discovered,
or it may have been discovered by someone else,
but he fixed an issue in the Bitcoin supply
because it turned out that Bitcoin was not capped
at 21 million coins.
It turned out, you know, if you went enough centuries
into the future, there was an overflow bug
and the supply subsidy would actually restart
at 50 Bitcoins per block.
And it would do that in perpetuity, you know,
every few centuries.
So, you know, there may very well be other, you know,
aspects of the Bitcoin protocol,
other, you know, edge cases that have not yet
been fully sussed out.
I think there are one or two known edge cases
that are currently enough decades away,
like with some, I think, timestamp overflow issues
that will have to be addressed and may require a hard fork,
but also, you know, it does seem like,
like with enough time and creativity,
almost anything can be soft forked,
but that's, you know, part of the discovery process.
- Yeah, but I think those would fall,
those two examples fall more into the category
of like fixing things that, well, fixing problems.
Whereas, you know, I guess the crux of my question is
when we're considering, again, answering this question,
what should Bitcoin be?
And some people have proposals in terms of
what it should be, like this vault proposal, let's say,
just to use a, like a specific example.
What do you think the risks,
what are the risks of implementing something like this?
What, when we consider this, when we can,
'cause you might consider, as we were just saying,
like, okay, the vault thing sounds interesting,
but look, it's not enough of a value add,
it's not enough of a benefit to go through the process
of implementing it.
But necessary to answer that question,
for anyone to have a, you know, an informed view on that,
I think you have to know like, well, what are the,
even if the downside is, whatever the upside is,
I wanna know what the downside is,
so I can make a, you know,
determine a risk benefit analysis on any given action.
So what, in your mind,
are the risks associated with soft forks?
And let's, for this case, say not, you know,
ones that are fixing things
that we already presume to be implemented,
but things that, you know, additional features, let's say,
what are the risks?
- Well, I mean, any consensus change comes with the risk
of introducing some sort of consensus failure.
And so, you know, I think, you know,
the last real consensus failure that we had
was back in 2013.
And, you know, and that actually occurred
as a result of a change that wasn't even understood
to be a consensus change, right?
It was due to a change in like the database
that was being used by Bitcoin Core
and the sort of the locking,
operational like locking count in the database,
having a mismatch between different versions
of the software.
But, you know, a consensus failure can happen
at basically anywhere in the stack.
Like this is certainly one of the things
that the protocol level developers
are extremely worried about
because there's this really weird,
you know, it's not a paradox,
but it certainly seems paradoxical
that Bitcoin is simultaneously,
arguably the most like anti-fragile thing,
at least on the internet.
But the flip side of this,
if you talk to the protocol developers,
the Bitcoin protocol is incredibly brittle.
And by that, I mean that, you know,
making changes to the protocol are highly risky
because, you know, even the consensus itself,
I don't think anyone would say
that they're like 100% knowledgeable
that they fully understand every byte
of Bitcoin's consensus.
Because like we said,
consensus rules are not necessarily just the rules
that are defined in the code as saying like,
this is validation rule one, validation rule two.
And so I think you see--
- Can you expand on that point a little bit?
Sorry to interrupt.
- Yeah.
- Okay, so like when you're looking at the Bitcoin code
and any of the implementations, you know,
you'll find various classes and functions
that are like, you know, validate transaction.
And then it's like, you know, validate outputs,
validate inputs.
And these are the like well-known,
well-defined logical rules and sanity checks
that do things that basically make sure
that nobody's double spending money
and they make sure that nobody is, you know,
creating money out of thin air
or, you know, exceeding the supply schedule.
But, you know, those are not the only rules that matter.
You know, basically any part of the code
that could cause a block or a transaction
to be accepted on one machine
but rejected on a different machine,
that's problematic.
And so like for the example of the fork
that happened 10 years ago,
it was, you know, it was a database configuration
and consistency that caused some machines
to accept some blocks but reject others.
I think more recently, like if you go look at
the Stevie Ellis of vulnerability,
that have been introduced and then patched into Bitcoin,
they tend to get introduced
as a result of fairly innocuous changes.
In many cases, it's like somebody who's cleaning up
or like refactoring some code.
And, you know, it looks like the logic is the same
between version one and version two.
They've just, you know, made an improvement
perhaps with like some efficiency.
And, you know, this gets all the way
through the review process and testing
and so on and so forth.
But it turned out that the new logic
introduced a vulnerability that could get exploited.
And it's just that like, it's such an edge case
that there weren't enough eyes looking at the code
to think adversarially and just think about that edge case.
So, you know, that's why protocol development
is inherently dangerous is because
where we're taking a piece of software that is,
you know, it's hundreds of billions of dollars,
basically network that is resting on top of this software
and changing, you know, potentially a single line of code,
a single byte of what is valid or invalid
can have catastrophic consequences.
- Right, and so with that in consideration,
is there any way to conceptualize?
I assume there's no way to quantify.
So how might we conceptualize the risks associated
with a given protocol upgrade?
Because again, I mean, absent that,
how are we to make that analysis?
I mean, 'cause Bitcoin obviously to many of us is,
well, like the Holy grail of money, right?
It's a very important thing.
We consider it to be an incredibly important tool
for humanity, as you said at the beginning,
for human freedom.
And we wanna see that not only survive,
but propagate and exert its maximal beneficial effect,
let's say.
And I think that's why there's so much apprehension
because if upgrades are kind of a black box
conceptually in terms of their risk,
then it's like, well, why would you, you know,
it's hard to make the decision to implement them
when the risks are unknown.
And the thing that you're attempting to protect
is so incredibly valued.
So can you shed any more light
or can you give me any perspective on
how one might be beneficially conceptualizing the risks
of protocol upgrades, soft forks,
like the ones we've been discussing?
- Well, yeah, I mean, I think that there's both
a pessimistic and an optimistic way to look at it.
You know, the pessimist says,
we cannot risk anything.
You know, we cannot risk even the smallest change
that may introduce a problem.
And that is, I believe, you know,
a argument for ossification.
You know, argument would be,
we've got hundreds of billions of dollars
that's being secured on this protocol.
The protocol in and of itself is its own bug bounty.
And so you could basically say
that there's a quantification of the security
or like the well-known security of the protocol
based on the fact that, you know, this is the bug bounty
if someone can exploit it and, you know, find a problem.
And that, you know, every time you make a change to that,
you're essentially, whatever change you're making
should have, you know, $300 billion
worth of confidence behind it, right?
And I don't think there's really anyone out there,
any developer who's ever gonna have $300 billion
worth of confidence about making any software changes.
'Cause, you know, software development in general
is usually a move fast, break things type of thing,
because, you know, something breaks, okay.
I mean, there may be some small consequences.
In many cases, you can revert them,
you can roll things back,
you can write more software that cleans up
whatever the mess was that you created
and you move forward.
It can be harder to do that,
especially on a distributed network
where, you know, doing rollbacks or take backs,
whatever you wanna call them are much more difficult.
Nothing's impossible.
But I would also take the optimistic argument,
once again, if we're just thinking about Bitcoin
as an anti-fragile thing,
the, I guess the last consensus failure that happened,
that was resolved within a matter of hours.
This is one of the final fallbacks
in Bitcoin security model.
And that is the fact that Bitcoin is backed by people.
And it's backed by those of us who care enough
to pay attention and maintain it.
And so even if there is some sort of
catastrophic consensus failure,
what does that really mean?
You know, consensus within Bitcoin,
we're talking about machine consensus.
There is this, it's this fine mixture.
It's both of an art and a science
of trying to divine what the machine consensus should be.
I almost see it as there's a sort of meta human consensus
of what is ideal money.
And it's just sort of floating out there.
You can't really quantify it.
You can maybe poke at little different aspects of it.
This is what the fuck we're trying to figure out Bitcoin is.
Is this unidentifiable abstract idea.
And we're trying, at least as developers,
the developers are trying to grab pieces of that
and codify it into machine consensus and machine code.
And the value of that is that we're automating
the enforcement of whatever those ideal consensus rules are.
But what happens if the machine consensus breaks?
I mean, you always can fall back to human consensus
and there's no guarantees around what that means,
but we do know there's this multi-hundred billion dollar
incentive for people to figure it out very quickly
if something goes wrong.
So that's, I kind of take the,
we can be more optimistic and we can take some small risks.
I mean, there's also risks of not ever doing anything
because software is living.
Unmaintained software inevitably corrodes and degrades
and becomes harder to operate.
So you certainly can't stop maintaining the software.
You could stop changing the consensus aspects to it.
But I do believe that there has to be
some acceptable threshold of risk
if you believe that the infinitesimal risk
that we're taking to make a change is outweighed
by potentially huge gain in value and functionality.
- Yeah, well, that's exactly the point of my question, right?
Is I agree with that if that were the case.
It's again, the assessment of the risk is determining
what that infinitesimal or not,
infinitesimal amount actually is,
and as a result of having a better idea there,
being able to make those decisions.
Last two on this and then we can move on,
but what is your approach to making such decisions?
Or if you have a heuristic of some kind,
when you say you see proposals,
you're like, okay, this is interesting proposal.
Is it worth taking the risk to put my support behind
or whatever for making a change?
And again, this is entirely speculative,
but what do you think would happen if, as you just said,
from here on out, everything was maintained,
so that living code was given sufficient life,
but no functional changes were implemented from here on.
And from now until the end of time,
we just had digital sound money and it didn't do
anything else.
Everything else was done outside the protocol level.
- I know those are two separate questions,
but so maybe go with how you make assessments
of different changes first and then this potential future.
- Yeah, I mean, for me,
it's about complexity and usability.
So for example, with a number of the other
Covenants proposals that have come up
in the past few years,
I could see the value that they offered,
but the reason that I generally didn't find them interesting
was because I either felt that it was so complicated
that almost nobody would use it.
And therefore, even if it's a high theoretical value,
the actual practical value just wasn't there.
And also, the complexity in many of them
was generally such that I felt like it was difficult
for me to quantify the risk just from
what could go wrong at the protocol level,
trying to validate much more complicated operations.
So when I saw the OpVault proposal
and I read the white paper, I was like, you know what?
I can grok this on the first time through.
It's extremely simple and straightforward.
I can see the risks of implementing it poorly,
and I feel confident that there aren't
other looming edge cases out there.
And then looking at the discussion
on the mailing list as well,
I noticed the general response
tended to be much more constructive
and just being like, oh, we could make a small tweak
here and there, not of the form of like,
this is a completely terrible idea
because of this trade-off or that trade-off.
- And well, before I get you to go back
to the second question, do you think a proposal like that
is of sufficient benefit that even if people assess it
like you're like, oh yeah, it's simple,
doesn't seem to be a lot of risks,
but knowing what we know about how these upgrades
get implemented, do you think it offers
an enticing enough carrot to actually go through
the whole process and all the work
of getting that rough consensus and becoming implemented?
- Yeah, I mean, I think this is interesting to me
both as a security engineer
and as just a regular Bitcoin holder.
This is the type of proposal
that I think is broadly applicable,
not only to like institutions and enterprises
that have huge amounts of value that they wanna store,
but I could see this being applicable
to really anyone who's using even a single signature wallet.
It would actually be, I think, really helpful
for decreasing the amount of resources
that someone has to spend to have
a high security Bitcoin wallet.
'Cause basically an example for like a very mainstream
user-friendly application of this,
I think that like any single signature hot wallet,
just like a mobile phone app would be able
to implement a simple vaulting proposal like this.
And it would basically be such that,
sure, you have your funds in a internet connected
a hot wallet, which doesn't have great proactive security,
but then you can basically have your seed phrase backed up,
a seed phrase to your recovery wallet backed up,
whether it's on metal or paper or whatever.
And then if that low security hot wallet gets compromised,
no big deal, it just gets swept
to your super cold storage recovery wallet.
- Right, but do you think that's a sufficient benefit
that it has any chance or likelihood
of actually being implemented?
Or do you think it's, again, not sufficient carrot
to motivate people to go through the somewhat messy process
of garnering consensus and actually implementing it?
- Well, I think this goes back to one of the earlier things
that we were talking about where one
of the most common complaints, pushback
from like the average person who comes into Bitcoin,
it's a shock because the traditional financial system
is one that it has all of these safety measures
now, all of these safety measures come at costs,
but people are used to being able to operate
in an environment where if something goes wrong,
you reach out to your support representative
and they help you resolve it, hopefully.
There are entire divisions of these companies
that you interact with that are devoted to doing nothing
other than helping their customers resolve problems.
Bitcoin has no support system, right?
Your Bitcoin gets moved and you don't know why
or where or what happened, there's no one to go to.
And that's very scary for a lot of people.
It is a very different security model.
It requires you to be a lot more proactive and paranoid.
And I think that, and this is, I guess,
a pessimistic aspect of me.
I no longer believe, I'm not sure if I ever did,
well, maybe idealistically, but I no longer believe
that a non-negligible number of people
are going to be proactive about helping themselves.
I think that from like a market perspective,
people adopting Bitcoin, the ones who ought to be adopting it
are those who have the most to gain.
Those who are in countries or financial and monetary systems
that are objectively horrible, even in comparison
to the first world countries.
But if we want the people who do have already
decent financial access and financial inclusion
to, I think, be more comfortable with using Bitcoin
and seeing the value in that,
then they are gonna wanna have some more of the assurances
that they're not gonna suffer a single catastrophic loss.
- Yeah, sure.
I mean, there's two comments to that.
The first one is just, yeah, sure, I agree.
But again, is that sufficient motivation
for something like this proposal to actually be implemented?
'Cause in my mind, I'm just kind of knowing
how things generally go here.
I'm thinking like I can easily see the benefit.
It just doesn't seem to me that it's sufficient
that it's gonna motivate enough
to actually be implemented, let's say.
And then what we were saying earlier, the argument like,
well, to what degree are we just being impatient
and to what degree supra, external to the protocol level
with solutions like Casa or Fetty or different schemes
around custodying 12 words or seed phrases
and stuff like that.
How much will they make up that debt?
And then my perhaps more radical side of me says,
I think we live in a society today
where so much responsibility has been delegated
to outside entities and organizations,
be they government or corporate,
such that people don't own their data,
they're not in control of their health,
they're not in control of their freedom.
There's so much reliance and or adherence
to rules outside of oneself
that personally, I like the idea of people
incrementally being more forced
to take on more responsibility.
And I say incrementally because as I was speaking
with my friend Francis recently,
and he said, on a sinking,
you don't need to motivate people
to jump on the lifeboat of a sinking ship,
that kind of a dynamic.
So to what degree will people become motivated
to overcome the existing security hurdles
as circumstances deteriorate even further?
And then to what degree will that inculcate
a renewed or perhaps altogether novel sense
of personal sovereignty and responsibility,
and how much will that propagate into the culture
and kind of contribute to this whole Bitcoin renaissance
that some of us, or that I often talk about, I should say.
So yeah, I mean, I get the benefit.
I guess the blunt question is,
do you think it has a chance?
- Well, I do, mainly because of the response
I've seen so far and the people that I've been talking to,
at least within the security side of community,
thinking this is an interesting new tool
to add to our tool belt.
I mean, you take a fatalistic hyper-Bitcoinization view
that I think there's general agreement
that Bitcoin is going to do well over the long-term,
not because Bitcoin is going to improve,
but because we know that all of the other systems
are going to continue to strangle themselves,
shoot themselves in the foot
and do just economically unbelievable things,
that will be the incentive for people
to switch to a more sound system.
Then the question is, are there changes
that can lower the entry point
to make people more comfortable jumping off of the boat?
If we agree they're going to jump off
into the life raft at some point,
what would make them jump off sooner rather than later
and hopefully save more of their wealth?
That's one perspective to look at it.
From an implementation perspective,
who are the interested parties,
I guess is an interesting question.
So obviously there's going to be a debate and development
at the protocol developer layer of the ecosystem,
but that's not sufficient in and of itself.
Even once something gets into the protocol
and it gets activated,
the onus is then on the rest of us
who are using Bitcoin as a platform
to build our services, our applications on top of.
And like I said, when I surveyed the most recent proposal,
I'm like, I could see every Bitcoin wallet out there,
regardless of its hardware, software, single SIG, multi SIG,
I could see them all looking at this
and seeing this as a valuable new set of functionality
that would be additive to what they're already offering.
So yeah, I mean, that's why I do think
that vaulting proposal that is straightforward
and if it can be de-risked, like we said,
and non-controversial, then that the likelihood is high.
Now, the history of Bitcoin governance and changes,
especially post scaling debate
has certainly been interesting.
People got burned out by the scaling debate.
There's certainly been much slower consensus changes
and looking at tap roots activation,
I felt like people, or at least the interested parties
and developers who were focused on getting that through,
they were making mountains out of molehills.
Basically, there were arguments
about the most trivial of activation parameters,
not even arguments about the actual functionality
of the protocol, but rather about exactly
what should the game theory of activating be like.
And this is where it's hard to say,
is this a good thing or a bad thing
that we don't have what I would call
a well-defined repeatable activation process.
It seems like every feature that gets activated
is done in a different way than it's ever been done before.
On one hand, that keeps people on their toes.
And on the other hand,
maybe that makes it more robust by making it so that
there's no specific actor or vulnerability
that can be used to stall.
That seems to be the main, I would say the main issue
that people are worried about now is that
from the scaling wars, we didn't understand until much later
that the miners were stalling because they had a secret.
They had an incentive not to have Segwit on the network
because it improved their profitability
with how they were manipulating nonces and stuff.
And so ever since then, it seems like there's been
just a level of apprehension around,
like how do you make a, once again,
a fair activation process that isn't going to get stonewalled
because of your perverse incentives?
- Yeah, it's a super interesting question
because as you say, on the one hand,
I mean, that kind of opaqueness makes it more difficult
to potentially co-opt, right?
Because there's no straight line of attack,
but it also makes it more difficult
for the people that are participating as honest actors
to know how to participate perhaps.
And so I guess it remains to be seen
if it's a feature or a bug.
I lean towards the perhaps the former, but we shall see.
And I guess my final comment on making protocol changes
to accommodate certain use cases, let's say,
as we've been discussing with Vaults.
And this is definitely the more perhaps radical side of me,
but I, and it's not decided,
but I think it's interesting open questions
to be had around these things.
And this is far more from the kind of cultural,
dare I say, social engineering aspect
of this new emergent form of money that we have
and how instrumental money is,
but is do we not wanna be careful that we don't,
on the protocol level, attempt to accommodate
all of our supposed or some of our supposed deficiencies,
i.e. perhaps our lack of degree,
there are any ability to take full responsibility
for things as they currently are
versus having the protocol almost be a catalyst
for people in conforming to it,
actually making changes in themselves
that are ultimately beneficial.
That was a bit wordy, but I think you get what I'm saying.
Like, do we not want to,
or it's not even really a question I'm posing to you.
I'm just sharing my thought
that I think it's important that we think,
or at least interesting that we think in those terms
of like, how much do we wanna change the protocol
to accommodate for things that we could,
and perhaps would be more beneficial for us
to have change internally rather than externally.
And I think that's an open dialogue
and will probably continue to be as we move forward.
- Yeah, I mean, so there's also the vision of Bitcoin
as a highly scalable multi-layered system.
And I think Lightning has done a good job
pushing that forward, but let's not forget
that the promise of sidechains has fallen flat.
And I'm sure there's a multitude of reasons for that,
but there's a big missing piece of functionality
for like drivechains and sidechains.
Basically the two-way peg,
this was in the original sidechains white paper
and I think 2014 or 2015, the original white paper
was theorizing that the sidechain based future of Bitcoin
would have all of these trustless two-way pegs.
And you could peg yourself from Bitcoin to sidechain A
and even to sidechain B and like basically whole,
your trees of sidechains and each one of these
could be very different and have its own consensus rules
and offer all kinds of amazing functionality
that people could implement without having to bother anyone
about changing Bitcoin's consensus.
So this is almost a sort of meta discussion
of everything we've said of like,
what if we made one final change to Bitcoin
that enabled trustless two-way pegs
and then you let all the experimentation you want happen.
You call them shitcoin sidechains,
nobody fucking cares because it doesn't bother them anymore.
No one can force them to have to pay attention to them.
What would the world be like if we could do that?
But we can't do that,
at least no one has figured out a way to do that
without making at least one small change
to Bitcoin's consensus.
- What's your opinion on such an approach?
- Yeah, I mean, I think that we should enable
more experimentation if we can do so in a way
that is not imposing burdens and risks
on the people who only want to deal with Bitcoin.
- Right, all right, I know you got a hard stop
in about 20 minutes, so this will be the last topic,
but I'd be remiss if I didn't cover
what was for some controversy with the CASA
supporting custody solutions for ETH.
I'm sure that prior to making that decision
or decision and announcement,
you guys knew that there'd be a certain amount
of blowback, let's say.
And I also assume that it was a straight up
economic decision.
You guys looked at the market and you said,
a lot of people need help with custodying their ETH
and other shitcoins, and we see that in the market.
So I guess my question is,
do you think, did you assess
the long-term reputational damage?
And if so, how?
And obviously you determined that the income
or revenue you could generate from the change was worth it,
but how did you guys look at that?
Because much as we might all like to say,
well, it's just a technology, it's not ideology,
I don't think that's an accurate representation
because many of us will readily admit we came to Bitcoin
because as we discussed at the beginning
of this conversation,
because it aligned with certain ideologies that you held,
whether that be libertarianism, anarcho-capitalism,
more freedom for every individual.
So nothing in our conceptual realm
is just an objective tool.
It's all about how we use it.
And once it enters that realm,
it's in the realm of belief and ideology
and opinion and all sorts of stuff.
So, and obviously I don't have to tell you
that Bitcoin has become so deeply meaningful
to so many people for what they presume at least
it's going to provide them in terms of freedom,
in terms of options, and also of course, provide the world.
Many of us would readily admit,
like we're kind of die on this hill sort of people
because we think that this being brought to the world
is such a powerful tool for human freedom
and human flourishing,
that it's perhaps one of the most important causes.
Well, I mean, I would assert
it's the most important cause of our generation
and it might be the most important cause of any generation.
And so I don't think it's fair or even accurate
to hand wave away people that express that passion
as simply being kind of like zealots
or Twitter trolls or whatever,
because I feel like that's not fully appreciating
how much this is both,
it's not just a technological tool,
but is ideological and political
in some of the most profound ways.
So all that, just to preface the question
of how did you guys assess making this decision
and what long-term implications there may be
in the context of,
well, let's just put it in the context of Bitcoin
is probably going to survive longer than ETH in my opinion.
And so, yeah.
Well, how did you guys think about making a decision
in terms of that, in terms of,
in some sense, legitimizing this other asset
by lending support to it and that kind of stuff?
Just bring me into the boardroom as it were.
- Yeah, we talked to people.
We talked to our own customers.
We talked to our prospective customers.
We logged all of the deals that we lost
because we didn't have Ethereum support.
We kept track of what was happening to the people
who they talked to us
and then they decided for another solution.
And if they were willing to tell us,
what solution were they deciding for
and what was their reasoning behind that?
And so, what we increasingly saw is
that there's a lot of multi-asset people out there.
I wouldn't want to speculate offhand,
but they're probably less of the adherence Bitcoin types
and more of the investor types.
But these people, especially the ones that have come in
more recently in the last cycle,
and they're just looking at this and diversifying
or they're interested in the various apps
and utility offered by Ethereum.
And most of these people, they also have Bitcoin
because they see that as another diversification.
They understand that Bitcoin and Ethereum
are very different things.
So, for us, it was like, well,
how much money are we leaving on the table?
Is it worth us to expend the research
and development resources to see
if we can offer the same type of security model,
this distributed hardware-based multi-SIG for Ethereum?
Because I mean, I was at BitGo when we added Ethereum
and I've written and talked extensively
about all of the problems with Ethereum.
So, I'm familiar with a lot of them.
I don't consider myself an Ethereum expert.
I've scratched the surface in comparison
to the time and resources that I've put into Bitcoin.
And yeah, I mean, it is a different platform.
Of course, some people are gonna say
that Ethereum is hard money and all this other stuff.
And I mean, I don't see it as money.
I think even like the original yellow paper
or the narrative around it was that Ethereum is gas
and the gas is used to power the utility functions
of this other network.
So, different people are gonna look at it in different ways,
but at a fundamental standpoint,
we are a key management company.
We're helping people take self-custody.
Bitcoin is the most valuable
and an obvious starting point with that,
but it's not gonna end with digital assets by any means.
We fully expect that over the longterm,
we're gonna be much more than just a self-custody company.
I mean, you just like look at Nostr.
I would love to see a way for us to start to implement
sovereign social networks.
I would say that key management on Nostr
is currently a very big problem
and there's going to be solutions to that.
Over the longterm, I think digital identity
and managing identity aspects with private keys
is gonna be an important aspect of just people's daily lives.
So, you should expect that Casa is going to continue
to seek out the tools that are out there
and try to figure out which tools have value and demand.
And I would say one of our big value adds
is figuring out ways to improve the usability,
decreasing the learning curve requirements
for people to manage their private keys
and to be able to use those private keys
to enable the functionality.
I mean, this all goes back to what I set my career mission
to be eight years ago,
is to help people improve their own security
and empower themselves.
And you know what?
Permissionless networks,
people are going to empower themselves
and do things that other people find objectionable
and offensive and stupid.
And there's gonna continue to be
really interesting interactions and clashes
between different communities and tribes on social media
and the narratives and the mimetics
that result from all of that.
And I'm here for it.
It's a fascinating space to be in.
And I also understand,
one thing that I've learned over the years
as my following increased by orders of magnitude
is that people who pay attention to you
over a period of time, they develop a mental model of you.
And this is actually,
this is not dissimilar to what we talked about earlier
of people developing and applying
their own mental models to Bitcoin.
Well, eventually over a long enough period of time,
if you are someone who is receiving a lot of attention
and you have hundreds of thousands of people
who have built mental models of you,
you're gonna do or say something
that shatters that mental model
and that results in some sort of backlash.
And I mean, this is not new for me,
as it's certainly not new for anyone
who has had a following,
is that you have to know who you are
and you have to understand that there's a lot of people
who don't know who you are at least fully.
And that if you're going to continue to be a public figure
and do and say things,
then there will be people who get upset.
And that's just, that's one of the realities
of being a public person.
- Yeah, totally agree.
I mean, and I think that does happen to a certain degree.
And if you're the type of person that evolves
and develops and changes over time,
then you're kind of inevitably gonna come up against that,
at least some kind of friction
if people have a more rigid conception of you.
All right, this is the last question
and probably not a great one for 10 minutes left
'cause it's probably fairly involved,
but I'll throw it at you anyways and see what you think.
And it's a continuation of this topic,
but it's a lot of people in the space,
whether they're particularly entrepreneurs
that start Bitcoin-only businesses,
I've heard them say before,
and I think a lot of maximalists
and people that are Bitcoin-only would probably echo this
in saying that they feel that Bitcoin-only,
offering Bitcoin-only products and services, let's say,
and supporting Bitcoin is a kind of moral imperative.
Now, that's a big statement, right?
Because there's a lot wrapped up in that.
And so I'm curious to get your thoughts
on what you think of that statement generally.
Nine minutes.
- I mean, I think that I'm not gonna be imposing
my morality on other people.
We all have our beliefs about what is ethical and unethical.
I mean, I do consider myself to be a strong proponent
of the non-aggression principle.
And I'm a builder.
I'm going to continue to build things.
And some of these things will be objectionable,
but for me, it's a question of,
am I building something that is helping or harming people?
And of course, this is a huge rabbit hole.
You can go down, I'm sure people will say,
well, the fact that you're even facilitating Ethereum stuff,
people are gonna hurt themselves.
There's a lot of scams and the whole thing
is based upon a premise that's not fair
and so on and so forth.
But people are, whenever you give people a tool,
it will be used in harmful ways.
So me building neutral tools,
this is another thing that I have to live with
is understand that there are people
who will use them to harm others.
And there are people who will be harmed
as a result of using them.
If you look at the level of scams and thefts and hacks
and stuff in Ethereum compared to Bitcoin,
I think it's orders of magnitude greater.
It's certainly a great platform
for scamming people on top of.
And so you're not gonna see me going around
telling people that they should be investing in
or using Ethereum.
This is something that the market
has spoken to us about this.
We're not going out and trying to project onto other people
what they should be doing with their wealth.
And even if we're setting Ethereum aside,
even just offering a Bitcoin wallet,
that is gonna get abused.
This happened a lot when I was at BitGo.
I'm sure it's happening to some extent at Casa
that scammers are using these wallets
and they're like social engineering
and performing other tricks onto people.
And they're taking that stolen money
and they're managing it with something that I've built.
And that's something that I have to live with,
unfortunately.
It's a lot harder for me to draw a sort of ideological line
between one and the other,
even though I would say objectively,
Ethereum from a very high level view
has a lot more activity.
It's the nature of having a much more feature-rich,
developer-friendly expressive network.
It has more good things built on top of it.
It has more bad things built on top of it.
And I try not to dwell on that too much.
These networks, they have been seeded
and are now essentially operating at a point
that they are their own thing.
We've spent a long time talking about
how it's hard to understand Bitcoin.
I don't even really try to understand Ethereum
and where it might be going.
I know that I'm generally not a fan
of the different trade-offs and decisions
that are made for it.
But there is no,
covering your eyes and saying that there isn't value there.
I mean, the market has quantified that there is value.
You can certainly object to how that value has been accrued,
but from a business perspective,
that is a significant chunk of the market now.
- I knew that was a horrible last question
'cause there's so many other paths I wanna go down,
but unfortunately we're limited by time today.
So Jameson, I'll let you go, man.
I appreciate you coming on for a chat
and signing up to do so because it was,
allowed me to ask a bunch of questions
that I don't usually get to ask
with someone who knows more about it than me.
So I appreciate it for you taking the time
and any last words or anywhere you wanna direct people,
floor is yours.
- Well, if anyone out there
has not seen my Bitcoin resources,
definitely check out bitcoin.page.
This is one of my oldest open source projects.
I think there's about 1500 educational links there.
- Is that where the seed plate reviews are?
- Absolutely, that's one of my dozen other projects.
So I maintain that, that's an ongoing act of love
as dealing with Linkrot and the new projects coming on board
and making sure that I have extensively kept track
of as much as possible within the ecosystem.
- It seems like a fun thing to do.
Like it would be fun going through all those tests and shit.
- Yeah, but sort of in closing, I'm a techno optimist.
I do believe that one of the great powers of this network,
even though it can be quite confounding
and make it difficult for people to understand
and operate within is the fact that it is,
it's distributed and made up
of so many different individuals.
And I certainly take a lot of abuse
because I've gotten to the point
where I have a lot of attention
and the diversity of opinions
of people who are paying attention to me
ultimately means that I will offend people
on a regular basis because I speak,
but I wouldn't have it any other way.
And I'm not gonna be going away.
So, feel free to continue to hurl all of your opinions,
both good and bad, and I'll be paying attention.
- Awesome.
Well, look man, thanks again
and look forward to catching up sometime in the future.
- Thanks.
- Take care, brother.